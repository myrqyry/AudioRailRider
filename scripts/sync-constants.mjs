import fs from 'fs/promises';
import path from 'path';

const SHARED_DIR = path.resolve(process.cwd(), 'shared');
const CONSTANTS_JSON_PATH = path.join(SHARED_DIR, 'constants.json');
const CONSTANTS_TS_PATH = path.join(SHARED_DIR, 'constants.ts');
const CONSTANTS_PY_PATH = path.join(SHARED_DIR, 'constants.py');

async function syncConstants() {
  try {
    console.log('Reading constants from constants.json...');
    const constantsJson = await fs.readFile(CONSTANTS_JSON_PATH, 'utf-8');
    const constants = JSON.parse(constantsJson);

    await generateTsFile(constants);
    await generatePyFile(constants);

    console.log('Successfully synchronized constants for TS and Python.');
  } catch (error) {
    console.error('Failed to synchronize constants:', error);
    process.exit(1);
  }
}

async function generateTsFile(constants) {
  let tsContent = `// This file is auto-generated by scripts/sync-constants.mjs. Do not edit manually.\n\n`;
  for (const [key, value] of Object.entries(constants)) {
    tsContent += `export const ${key} = ${JSON.stringify(value, null, 2)} as const;\n\n`;
  }
  await fs.writeFile(CONSTANTS_TS_PATH, tsContent);
  console.log(`Generated ${CONSTANTS_TS_PATH}`);
}

async function generatePyFile(constants) {
  let pyContent = `# This file is auto-generated by scripts/sync-constants.mjs. Do not edit manually.\n\n`;
  for (const [key, value] of Object.entries(constants)) {
    pyContent += `${key} = ${JSON.stringify(value, null, 2)}\n\n`;
  }
  await fs.writeFile(CONSTANTS_PY_PATH, pyContent);
  console.log(`Generated ${CONSTANTS_PY_PATH}`);
}

syncConstants();
